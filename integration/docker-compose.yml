version: "3.8"

networks:
  integration-network: {}

x-environment:
  &default-environment
  username_admin_globalaccesslevel: admin
  username_admin_password: ${ADMIN_PASSWORD:-admin}
  system_scaling_maxconnectioncount: 100
  redundancy_enable: "yes"
  redundancy_group_password: topsecret
  redundancy_group_node_primary_connectvia: primary
  redundancy_group_node_primary_nodetype: message_routing
  redundancy_group_node_backup_connectvia: backup
  redundancy_group_node_backup_nodetype: message_routing
  redundancy_group_node_monitoring_connectvia: monitoring
  redundancy_group_node_monitoring_nodetype: monitoring

x-common:
  &default-common
  image: solace/solace-pubsub-standard:${SOLACE_VERSION:-latest}
  shm_size: 1g
  ulimits:
    core: 1
    nofile:
      soft: 2448
      hard: 38048
  networks:
    - integration-network

volumes:
  mysql-volume:
    external: true
    name: ${MYSQL_VOLUME}

services:

  mosquitto:
    container_name: mosquitto
    hostname: mosquitto
    #image:  eclipse-mosquitto:latest
    build: mosquitto
    ports:
      - "1895:1883"
    volumes:
      - "E:\\Data\\mosquitto:/mosquitto/data"
    networks:
      - integration-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1000M
        #reservations:
        #  cpus: '1'
        #  memory: 200M

  #mosquitto:
  #  build: mosquitto
  #  ports:
  #    - "1895:1883"

  primary:
    container_name: primary
    hostname: primary
    ports:
      - "212:2222"
      - '8081:8080'
    environment:
      << : *default-environment
      routername: primary
      configsync_enable: "yes"
      redundancy_matelink_connectvia: backup
      redundancy_activestandbyrole: primary
      service_semp_tlsport: 1943
    << : *default-common
    #volumes:
      #- "E:\\Data\\primary\\jail:/usr/sw/jail"
      #- "E:\\Data\\primary\\diags:/var/lib/solace/diags"
      #- "E:\\Data\\primary\\internalSpool:/usr/sw/internalSpool"
      #- "E:\\Data\\primary\\softAdb:/usr/sw/internalSpool/softAdb"
      #- "E:\\Data\\primary\\adb:/usr/sw/adb"
      #- "E:\\Data\\primary\\var:/usr/sw/var"

  backup:
    container_name: backup
    hostname: backup
    ports:
      - "213:2222"
      - '8082:8080'
    environment:
      << : *default-environment
      routername: backup
      configsync_enable: "yes"
      redundancy_matelink_connectvia: primary
      redundancy_activestandbyrole: backup
      service_semp_tlsport: 1943
    << : *default-common
    #volumes:
      #- "E:\\Data\\backup\\jail:/usr/sw/jail"
      #- "E:\\Data\\backup\\diags:/var/lib/solace/diags"
      #- "E:\\Data\\backup\\internalSpool:/usr/sw/internalSpool"
      #- "E:\\Data\\backup\\softAdb:/usr/sw/internalSpool/softAdb"
      #- "E:\\Data\\backup\\adb:/usr/sw/adb"
      #- "E:\\Data\\backup\\var:/usr/sw/var"

  monitoring:
    container_name: monitoring
    hostname: monitoring
    ports:
      - "412:2222"
      - '8083:8080'
    environment:
      << : *default-environment
      routername: monitoring
      nodetype: monitoring
      service_semp_tlsport: 1943
    << : *default-common

  lb:
    container_name: lb
    hostname: lb
    image: 'haproxy:${HAPROXY_VERSION}'
    volumes:
      - ./assertMaster.perl:/assertMaster.perl
    environment:
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}
    user: root
    entrypoint:
      - /bin/bash
      - "-c"
      # for debugging
      #- "sleep 2073600"
      - "perl /assertMaster.perl"
    ports:
      - '8008:8008'
      - '1443:1443'
      - '1943:1943'
      - '1883:1883'
      - '5671:5671'
      - '5672:5672'
      - '8000:8000'
      - '8080:8080'
      - '8443:8443'
      - '8883:8883'
      - '9000:9000'
      - '9443:9443'
      - '55555:55555'
      - '55003:55003'
      - '55443:55443'
      - '1936:1936'
    networks:
      - integration-network

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: ${MYSQL_HOST}
    hostname: ${MYSQL_HOST}
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8989:3306"
    volumes:
      #- "mysql-volume:/var/lib/mysql"
      - "E:\\Data\\mysql:/var/lib/mysql"
    networks:
      - integration-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${PMA_HOST}
    hostname: ${PMA_HOST}
    environment:
      PMA_HOST: ${MYSQL_HOST}
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_ROOT_USER}
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_ARBITRARY: 1
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: always
    ports:
      - "${HOST_MACHINE_PMA_PORT}:80"
    networks:
      - integration-network

  # TODO: add mongodb
  mongodb:
    image: 'mongo:${MONGODB_VERSION}'
    container_name: mongodb
    hostname: mongodb
    environment:
      MONGO_DATA_DIR: /data/db
      #MONGO_LOG_DIR: /dev/null
    volumes:
      #- "mysql-volume:/var/lib/mysql"
      - "E:\\Data\\mongodb:/data/db"
    ports:
      - 27017:27017
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo  --quiet) -eq 1
      interval: 10s
      start_period: 30s

    #volumes:
      #- "E:\\Data\\mongodb:/var/lib/mysql"
    #environment:


  # TDOD: add streamsets
