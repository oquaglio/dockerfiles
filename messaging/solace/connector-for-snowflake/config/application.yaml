# --------------------------
# SAMPLE CONFIGURATION
# --------------------------

spring:
  cloud:
    # For more info about Spring Cloud Stream and the Solace PubSub+ binder:
    # - https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html
    # - https://github.com/SolaceProducts/solace-spring-cloud/tree/master/solace-spring-cloud-starters/solace-spring-cloud-stream-starter
    stream:
      bindings: # Workflow bindings
        input-0:
          destination: Queue-A # Solace queue name
          binder: solace
        output-0:
          destination: DEMO.PUBLIC.TABLEA # Snowflake producer destination (In this configuration 'DEMO' is the database, 'PUBLIC' is the schema, and 'TABLEA' is the table)
          binder: snowflake
        input-1:
          destination: Queue-B # Solace queue name
          binder: solace
        output-1:
          destination: DEMO.PUBLIC.TABLEB # Snowflake producer destination (In this configuration 'DEMO' is the database, 'PUBLIC' is the schema, and 'TABLEB' is the table)
          binder: snowflake
      solace:
        default:
          consumer:
            auto-bind-error-queue: true
            error-queue-name-expression: "destination + '-errors'" # where "destination" is the source queue name
#      snowflake:
#        default:
#          producer:
#            database: DEMO # Default database if destination is not fully qualified
#            schema: PUBLIC # Default schema if destination is not fully qualified
#            table: TABLE # Default table for all bindings if not specified
#            acknowledgment-mode: ON_COMMIT # Timing of when to send an Ack to the message broker, possible values ON_INSERT or ON_COMMIT (default)
#            provisioning-mode: # Specifies provisioning behavior of Snowflake objects, possible values NONE (default), and CREATE.
#              tables: CREATE # Table provisioning behavior
#        bindings: # per-binding overrides
#          output-0:
#            producer:
#      binding-retry-interval: 30  # The interval (in seconds) between retrying binding creation. Set it to zero to treat such conditions as fatal, preventing the application from starting.

snowflake:
  url: $SNOWFLAKE_ACCOUNT.snowflakecomputing.com:443 # For instance, for the Snowflake account URL 'https://nsb82454.us-east-1.snowflakecomputing.com/' the url property would be 'nsb82454.us-east-1.snowflakecomputing.com:443'.
  username: snowflake_user
  role: ROLE # Snowflake role. E.g. ACCOUNTADMIN, SECURITYADMIN, USERADMIN, SYSADMIN, PUBLIC. For more info: https://docs.snowflake.com/en/sql-reference/sql/create-role and https://docs.snowflake.com/en/user-guide/security-access-control-overview.
  #private-key-path: "~/.keys/snowflake/private_key_encrypted.p8" # File protocol path to the private key file. For more info: https://docs.snowflake.com/en/user-guide/key-pair-auth.html
  private-key-path: /secrets/rsa_key.p8 # File protocol path to the private key file. For more info: https://docs.snowflake.com/en/user-guide/key-pair-auth.html
  private-key-password: $SNOWFLAKE_PRIVATE_KEY_PASSPHRASE # Password for the encrypted private key if applicable.

solace:
  connector:
    workflows: # Workflow configuration
      0:
        enabled: true # If true, the workflow is enabled.
      1:
        enabled: true # If true, the workflow is enabled.

    #        transform-headers:  # Per-Processor headers transform configuration
    #          expressions:  # A mapping of header names to header value SpEL expressions. The SpEL context contains the `headers` parameter which can be used to read the input message’s headers.
    #            new-header: "'prefix-' + headers.id"  # Example
    #        transform-payloads:  # Per-Processor payloads transform configuration
    #          expressions:  # A list of a single transformation as a SpEL expression
    #            - transform: "#isPayloadBytes(payload) ? new String(payload).toUpperCase() : payload instanceof T(String) ? payload.toUpperCase() : payload"  # Example

    #    management:
    #      leader-election:
    #        mode: standalone  # The connector’s leader election mode. (values: standalone, active_active, active_standby)
    #        fail-over:
    #          max-attempts: 3  # The maximum number of attempts to perform a fail-over.
    #          back-off-initial-interval: 1000  # The initial interval (milliseconds) to back-off when retrying a fail-over.
    #          back-off-max-interval: 10000  # The maximum interval (milliseconds) to back-off when retrying a fail-over.
    #          back-off-multiplier: 2.0  # The multiplier to apply to the back-off interval between each retry of a fail-over.
    #      queue: management-queue  # The management queue name.
    #      session:  # The management session. This has the same interface as that used by `solace.java.*`. For more info: https://github.com/SolaceProducts/solace-spring-boot/tree/master/solace-spring-boot-starters/solace-java-spring-boot-starter#updating-your-application-properties
    #        host: tcp://localhost:55555
    #        client-username: default
    #        client-password: default

    security:
      enabled: true # If true, security is enabled. Otherwise, anyone has access to the connector's endpoints.
  #      users:  # User configuration. To access endpoints when security is enabled, at least one user must be created.
  #        - name:   # The name of this user.
  #          password: # The password for this user.
  #          roles:  # The list of roles which this user has. Has read-only access if no roles are given. (values: admin)
  #            - admin

  java: # Solace PubSub+ connection details. For more info: https://github.com/SolaceProducts/solace-spring-boot/tree/master/solace-spring-boot-starters/solace-java-spring-boot-starter#updating-your-application-properties
    connect-retries: -1
    reconnect-retries: -1
#    host: tcp://localhost:55555
#    msg-vpn: default
#    client-username: default
#    client-password: default

management:
  #  <system>: # Metrics monitoring systems. For more info: https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.metrics
  #    metrics:
  #      export:
  #        enabled: false
  #  defaults:
  #    metrics:
  #      export:
  #        enabled: false
  simple:
    metrics:
      export:
        enabled: true
  #  endpoint:
  #    env:
  #      show-values: WHEN_AUTHORIZED  # Required for Connector-Manager integration. Must be set to `ALWAYS` when solace.connector.security.enabled = false
  #    health:
  #      show-components: never
  #      show-details: never
  endpoints:
    web: # Actuator web endpoint configuration. For more info: https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.endpoints. Initial set of metrics is defined as a bare minimum for Connector Manager compatibility. To shrink it simply remove unnecessary ones
      exposure:
        include: "health,metrics,loggers,logfile,channels,env,workflows,leaderelection,bindings,info"
#logging:  # Logging configuration. For more info: https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.logging
#  level:
#    root: warn
#    com.solace.connector.servicebus: WARN # Enables logs for connector
#    com.solace.connector.core: WARN # Enables logs for connector framework
#    com.solace.spring.cloud.stream.binder: WARN # Enables logs for Solace and JMS binders
#  file:
#    name: myapp.log  # base log file name. Example: Generates a log file to a file named myapp.log.
#  logback:
#    rollingpolicy:  # Logback file rolling policy
#      file-name-pattern: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"  # Pattern for rolled-over log file names. Example: Rolls the log file into an archive once every day. `%i` is reset to `0` at the start of the day.
#      max-file-size: 100MB  # The maximum size of log file before it is archived. Example: Within a given day, when the log file reaches 100 MB, archive it, and increment `%i`.
#      max-history: 7  # The maximum rotation-period's worth of archive log files to keep. Example: Since the `file-name-pattern` is configured to rollover once every day, keep 7 days worth of log archives.
#      total-size-cap: 1GB  # Total size of log backups for a given rotation period. Example: Keep up-to 1 GB of log archives for every day.

#server:
#  port: 8090
